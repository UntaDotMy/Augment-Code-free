name: Build Executable

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            executable_name: AugmentFree_latest.exe
          - os: ubuntu-latest
            executable_name: AugmentFree_latest
          - os: macos-latest
            executable_name: AugmentFree_latest

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv sync

    - name: Install PyInstaller
      run: |
        uv add pyinstaller

    - name: Check for icon file
      id: check_icon
      run: |
        if [ -f "app.ico" ]; then
          echo "icon_exists=true" >> $GITHUB_OUTPUT
        else
          echo "icon_exists=false" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Build executable (Windows)
      if: runner.os == 'Windows'
      run: |
        if [ "${{ steps.check_icon.outputs.icon_exists }}" = "true" ]; then
          uv run pyinstaller --onefile --windowed --icon=app.ico --name=AugmentFree_latest --add-data="src/augment_free/web;augment_free/web" --add-data="app.ico;." src/augment_free/main.py
        else
          uv run pyinstaller --onefile --windowed --name=AugmentFree_latest --add-data="src/augment_free/web;augment_free/web" src/augment_free/main.py
        fi
      shell: bash

    - name: Build executable (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        if [ "${{ steps.check_icon.outputs.icon_exists }}" = "true" ]; then
          uv run pyinstaller --onefile --windowed --icon=app.ico --name=AugmentFree_latest --add-data="src/augment_free/web:augment_free/web" --add-data="app.ico:." src/augment_free/main.py
        else
          uv run pyinstaller --onefile --windowed --name=AugmentFree_latest --add-data="src/augment_free/web:augment_free/web" src/augment_free/main.py
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-executable
        path: |
          dist/${{ matrix.executable_name }}
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/windows-latest-executable/AugmentFree_latest.exe
          artifacts/ubuntu-latest-executable/AugmentFree_latest
          artifacts/macos-latest-executable/AugmentFree_latest
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
